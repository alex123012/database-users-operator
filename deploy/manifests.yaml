apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: database-users-operator
    control-plane: controller-manager
  name: database-users-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: databases.databaseusersoperator.com
spec:
  group: databaseusersoperator.com
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the databases API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSpec defines the desired state of Database.
            properties:
              databaseType:
                description: Type of database to connect (Currently it is PostgreSQL and MySQL), required
                type: string
              mySQL:
                description: Config for connecting for MySQL compatible databases, not required. required if DatabaseType equals to "MySQL".
                properties:
                  databaseName:
                    description: Database name that will be used to connect to database, not required. see https://dev.mysql.com/doc/refman/8.0/en/connecting.html.
                    type: string
                  host:
                    description: Full DNS name/ip for database to use, required. If K8S service is used to connect - provide host as <db-service-name>.<db-service-namespace>.svc.cluster.local refer to --host flag in https://dev.mysql.com/doc/refman/8.0/en/connection-options.html
                    type: string
                  passwordSecret:
                    description: Secret with password for User to connect to database refer to --password flag in https://dev.mysql.com/doc/refman/8.0/en/connection-options.html
                    properties:
                      key:
                        description: Kubernetes secret key with data
                        type: string
                      secret:
                        description: Secret is secret name and namespace
                        properties:
                          name:
                            description: resource name
                            type: string
                          namespace:
                            description: resource namespace
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    required:
                    - key
                    - secret
                    type: object
                  port:
                    description: k8s-service/database port to connect to execute queries, defaults to 3306. refer to --port flag in https://dev.mysql.com/doc/refman/8.0/en/connection-options.html
                    type: integer
                  user:
                    description: The MySQL user account to provide for the authentication process, defaults to "mysql". It must have at least CREATE ROLE privilege (if you won't provide superuser acess to users) or database superuser role if you think you'll be needed to give some users database superuser privileges refer to --user flag in https://dev.mysql.com/doc/refman/8.0/en/connection-options.html and https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#privileges-provided-guidelines "Privilege-Granting Guidelines"
                    type: string
                  usersHostname:
                    description: The hostname from which created users will connect By default "*" will be used (So users would be "<user>@*")
                    type: string
                required:
                - host
                - port
                - user
                - usersHostname
                type: object
              postgreSQL:
                description: Config for connecting for PostgreSQL compatible databases, not required. required if DatabaseType equals to "PostgreSQL".
                properties:
                  databaseName:
                    description: Database name that will be used to connect to database, not required refer to --dbname flag in https://www.postgresql.org/docs/current/app-psql.html
                    type: string
                  host:
                    description: Full DNS name/ip for database to use, required. If K8S service is used to connect - provide full dns name as <db-service-name>.<db-service-namespace>.svc.cluster.local refer to --host flag in https://www.postgresql.org/docs/current/app-psql.html
                    type: string
                  passwordSecret:
                    description: Secret with password for User to connect to database If SSL Mode equals to "disable", "allow" or "prefer" field is required. If SSL Mode equals to "require", "verify-ca" or "verify-full" - not required. refer to --password flag in https://www.postgresql.org/docs/current/app-psql.html
                    properties:
                      key:
                        description: Kubernetes secret key with data
                        type: string
                      secret:
                        description: Secret is secret name and namespace
                        properties:
                          name:
                            description: resource name
                            type: string
                          namespace:
                            description: resource namespace
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    required:
                    - key
                    - secret
                    type: object
                  port:
                    description: k8s-service/database port to connect to execute queries, defaults to 5432. refer to --port flag in https://www.postgresql.org/docs/current/app-psql.html
                    type: integer
                  sslCaKey:
                    description: Secret with CA key for creating users certificates If SSL Mode equals to "disable", "allow" or "prefer" field is not required. If SSL Mode equals to "require", "verify-ca" or "verify-full" - required. see https://www.postgresql.org/docs/current/libpq-ssl.html
                    properties:
                      key:
                        description: Kubernetes secret key with data
                        type: string
                      secret:
                        description: Secret is secret name and namespace
                        properties:
                          name:
                            description: resource name
                            type: string
                          namespace:
                            description: resource namespace
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                    required:
                    - key
                    - secret
                    type: object
                  sslMode:
                    description: 'SSL mode that will be used to connect to PostgreSQL, defaults to "disable". Posssible values: "disable", "allow", "prefer", "require", "verify-ca", "verify-full". If SSL mode is "require", "verify-ca", "verify-full" - operator will generate K8S secret with SSL bundle (CA certificate, user certificate and user key) for User CR with same name as User CR. see https://www.postgresql.org/docs/current/libpq-ssl.html'
                    type: string
                  sslSecret:
                    description: Secret with SSL CA certificate ("ca.crt" key), user certificate ("tls.crt" key) and user key ("tls.key" key). If SSL Mode equals to "disable", "allow" or "prefer" field is not required. If SSL Mode equals to "require", "verify-ca" or "verify-full" - required. see https://www.postgresql.org/docs/current/libpq-ssl.html
                    properties:
                      name:
                        description: resource name
                        type: string
                      namespace:
                        description: resource namespace
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  user:
                    description: User that will be used to connect to database, defaults to "postgres". It must have at least CREATEROLE privilege (if you won't provide superuser acess to users) or database superuser role if you think you'll be needed to give some users database superuser privileges refer to --username flag in https://www.postgresql.org/docs/current/app-psql.html and https://www.postgresql.org/docs/current/sql-grant.html "GRANT on Roles"
                    type: string
                required:
                - host
                - port
                - sslMode
                - user
                type: object
            required:
            - databaseType
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: privileges.databaseusersoperator.com
spec:
  group: databaseusersoperator.com
  names:
    kind: Privileges
    listKind: PrivilegesList
    plural: privileges
    singular: privileges
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Privileges is the Schema for the privileges API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          privileges:
            description: List of privileges, required.
            items:
              description: PrivilegesSpec defines the desired state of Privileges.
              properties:
                database:
                  description: If Privilege is database specific - this field will be used to determine which db to use, not required.
                  type: string
                "on":
                  description: In database object to give privileges to, not required.
                  type: string
                privilege:
                  description: Privilege is role name or PrivilegeType, required.
                  type: string
              required:
              - privilege
              type: object
            type: array
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: users.databaseusersoperator.com
spec:
  group: databaseusersoperator.com
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User.
            properties:
              databases:
                description: List of databases, where user needs to be created with configs for it.
                items:
                  properties:
                    createdSecret:
                      description: If operator would create data for user (for example for postgres with sslMode=="verify-full"), it is reference to non-existed Secret, that will be created during user creation in the database, not required.
                      properties:
                        name:
                          description: resource name
                          type: string
                        namespace:
                          description: resource namespace
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    name:
                      description: The name of the Database CR to create user in, required.
                      type: string
                    passwordSecret:
                      description: Reference to secret with password for user in the database, not required.
                      properties:
                        key:
                          description: Kubernetes secret key with data
                          type: string
                        secret:
                          description: Secret is secret name and namespace
                          properties:
                            name:
                              description: resource name
                              type: string
                            namespace:
                              description: resource namespace
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                      required:
                      - key
                      - secret
                      type: object
                    privileges:
                      description: List of references to Privileges CR, that will be applied to created user in the database, required.
                      items:
                        properties:
                          name:
                            description: resource name
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - privileges
                  type: object
                type: array
            required:
            - databases
            type: object
          status:
            description: UserStatus defines the observed state of User.
            properties:
              summary:
                properties:
                  message:
                    type: string
                  ready:
                    type: boolean
                required:
                - ready
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-controller-manager
  namespace: database-users-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-leader-election-role
  namespace: database-users-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: database-users-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - databaseusersoperator.com
  resources:
  - databases
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - databaseusersoperator.com
  resources:
  - privileges
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - databaseusersoperator.com
  resources:
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - databaseusersoperator.com
  resources:
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - databaseusersoperator.com
  resources:
  - users/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-leader-election-rolebinding
  namespace: database-users-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: database-users-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: database-users-operator-controller-manager
  namespace: database-users-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: database-users-operator-manager-role
subjects:
- kind: ServiceAccount
  name: database-users-operator-controller-manager
  namespace: database-users-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: database-users-operator
  name: database-users-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: database-users-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: database-users-operator-controller-manager
  namespace: database-users-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: database-users-operator
    control-plane: controller-manager
  name: database-users-operator-controller-manager-metrics-service
  namespace: database-users-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: database-users-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: database-users-operator
    control-plane: controller-manager
  name: database-users-operator-controller-manager
  namespace: database-users-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/alex123012/database-users-operator:v0.1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: database-users-operator-controller-manager
      terminationGracePeriodSeconds: 10
